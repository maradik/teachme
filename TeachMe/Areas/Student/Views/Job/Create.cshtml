@using TeachMe.Helpers.Mvc
@using TeachMe.References
@model TeachMe.Models.Jobs.Job

@{
    ViewBag.Title = "Новая задача";
}

<h2>Новая задача</h2>


@using (Html.BeginForm("Create", "Job", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SubjectId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListWithEmptyElementFor(x => x.SubjectId, ((Subject[])ViewBag.Subjects).Select(x => new SelectListItem { Value = x.Id.ToString(), Text = x.Title }), new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.SubjectId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", style = "min-height: 100px;" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudentCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentCost, "", new { @class = "text-danger" })
                <div id="lowCostWarning"><span class="text-warning field-validation-error"><span class="glyphicon glyphicon-warning-sign"></span> Указанное значение <b>ниже средней стоимости</b> по данному предмету.</span></div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Attachments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div id="uploadedFileInputContainer"></div>
                @Html.ValidationMessageFor(model => model.Attachments, "", new {@class = "text-danger"})
                <div><a href="#" id="addUploadedFile">Добавить</a></div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Создать" class="btn btn-default" data-showloader="true" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад к списку", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function() {
            initUploadedFileBlock();

            //warning насчет низкой стоимости
            var setLowCostWarningVisibility = function () {
                if ($("#StudentCost").val() < 250) {
                    $("#lowCostWarning").show();
                } else {
                    $("#lowCostWarning").hide();
                }
                return true;
            };
            setLowCostWarningVisibility();
            $("#StudentCost").keyup(setLowCostWarningVisibility);
        });
    </script>
}
